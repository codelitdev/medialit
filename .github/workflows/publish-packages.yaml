name: Publish Npm packages

on:
  push:
    branches:
      - main 
    tags-ignore:
      - '**'

jobs:
  publish-packages:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: Configure CI Git User
        run: |
          git config --global user.name 'Rajat Saxena'
          git config --global user.email 'hi@sub.rajatsaxena.dev'
          git remote set-url origin https://$GITHUB_ACTOR:$GITHUB_PAT@github.com/codelitdev/medialit
        env:
          GITHUB_PAT: ${{ secrets.PAT }}

      - name: Checkout and pull branch
        run: git checkout "${GITHUB_REF:11}" && git pull

      - name: Install Packages
        run: |
          yarn install
          yarn lerna bootstrap

      - name: Authenticate with Registry
        run: |
          yarn logout
          echo "registry=http://registry.npmjs.org/" >> .npmrc
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm whoami
        env:
          NPM_TOKEN: ${{ secrets.NPM }}

      - name: Publish package
        run: |
          yarn lerna publish from-git --yes
        env:
          GH_TOKEN: ${{ secrets.PAT }}
          GITHUB_TOKEN: ${{ secrets.PAT }}
          NPM_TOKEN: ${{ secrets.NPM }}
  
  publish-docker-images:
    needs: publish-packages
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v1

      - name: Checkout and pull branch
        run: |
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          git checkout $LATEST_TAG

      - name: Setup buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERNAME }}
          password: ${{ secrets.DOCKERTOKEN }}

      - name: Docker meta for core 
        id: meta_core 
        uses: docker/metadata-action@v3
        with:
          images: codelit/medialit 

      - name: Build and push core
        id: docker_build_core
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta_core.outputs.tags }}

      - name: Image digest
        run: echo ${{ steps.docker_build_backend.outputs.digest }}